from dis import disco
from email.mime import base
import pstats
from re import L
import time
from turtle import title
from xml.dom.expatbuilder import parseFragmentString
from colorama import Cursor
import requests
import discord
import asyncio
import sqlite3
from discord.ext import commands
import random


data_base = sqlite3.connect("selentie.db")
curs = data_base.cursor()


PREFIX = "$"

selentie = commands.Bot( command_prefix=PREFIX )
selentie.remove_command('help')


@selentie.event
async def on_ready():
    print('[+] selentie-bot launched...')
    data_base.execute("CREATE TABLE IF NOT EXISTS {}(servername, languageid)".format('localization'))
    data_base.commit()
    print('[+] localization service initialized...')
    data_base.execute("CREATE TABLE IF NOT EXISTS {}(servername, messagecout)".format('messages'))
    data_base.commit()
    print('[+] message service initialized...')
    data_base.execute("CREATE TABLE IF NOT EXISTS {}(servername, commandcout)".format('commands'))
    data_base.commit()
    print('[+] commands service initialized...')
    data_base.execute("CREATE TABLE IF NOT EXISTS {}(servername, user, warns)".format('warnings'))
    data_base.commit()
    print('[+] warnings service initialized...')
    data_base.execute("CREATE TABLE IF NOT EXISTS {}(servername, userid, msgs, lvl)".format('level'))
    data_base.commit()
    print('[+] level service initialized...')
    data_base.execute("CREATE TABLE IF NOT EXISTS {}(userid, hooby, about)".format('bio'))
    data_base.commit()
    print('[+] biography service initialized...')
    data_base.execute("CREATE TABLE IF NOT EXISTS {}(servername, working)".format('chatfilter'))
    data_base.commit()
    print('[+] chat filter service initialized...')
    data_base.execute("CREATE TABLE IF NOT EXISTS {}(servername, channel_id)".format('reports'))
    data_base.commit()
    print('[+] reports service initialized...')
    data_base.execute("CREATE TABLE IF NOT EXISTS {}(servername, user_role_id)".format('user_role'))
    data_base.commit()
    print('[+] verification service initialized...')
    data_base.execute("CREATE TABLE IF NOT EXISTS {}(servername, userid, status)".format('tickets'))
    data_base.commit()
    print('[+] ticket service initialized...')

    await selentie.change_presence(status=discord.Status.do_not_disturb, activity=discord.Game(name='$help'))



@selentie.event
async def on_command_error(ctx, error):
    pass



@selentie.event
async def on_message( message ):
    await selentie.process_commands( message )

    author_id = message.author.id
    server_name = message.guild.name
    user_message = message.content.lower()


    server_localization = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()


    if server_localization == None:
        curs.execute('INSERT INTO localization VALUES(?, ?)', (f'{server_name}', f"0"))
        data_base.commit()
    else:
        pass
   

    ms_cout = curs.execute('SELECT messagecout FROM messages WHERE servername == ?', (f'{server_name}',)).fetchone()

    if ms_cout == None:
        curs.execute('INSERT INTO messages VALUES(?, ?)', (f'{server_name}', f"2"))
        data_base.commit()
    else:
        pass

    cmd_ct = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{server_name}',)).fetchone()

    if cmd_ct == None:
        curs.execute('INSERT INTO commands VALUES(?, ?)', (f'{server_name}', f"0"))
        data_base.commit()


    ct_fl = curs.execute('SELECT working FROM chatfilter WHERE servername == ?', (f'{server_name}',)).fetchone()

    if ct_fl == None:
        curs.execute('INSERT INTO chatfilter VALUES(?, ?)', (f'{server_name}', False))
        data_base.commit()
    else:
        pass


    reports = curs.execute('SELECT channel_id FROM reports WHERE servername == ?', (f'{server_name}',)).fetchone()

    if reports == None:
        curs.execute('INSERT INTO reports VALUES(?, ?)', (f'{server_name}', f'0'))
        data_base.commit()
    else:
        pass


    user_role_id = curs.execute('SELECT user_role_id FROM user_role WHERE servername == ?', (f'{server_name}',)).fetchone()

    if user_role_id == None:
        curs.execute('INSERT INTO user_role VALUES(?, ?)', (f'{server_name}', f'0'))
        data_base.commit()
    else:
        pass



    server_messages = curs.execute('SELECT messagecout FROM messages WHERE servername == ?', (f'{message.guild.name}',)).fetchone()
    

    cout_messsage = int(server_messages[0])
    cout_messsage += 1

    curs.execute('UPDATE messages SET messagecout == ? WHERE servername == ?', (f'{cout_messsage}', f'{message.guild.name}'))
    data_base.commit()


    is_filter_enabled = curs.execute('SELECT working FROM chatfilter WHERE servername == ?', (f'{server_name}',)).fetchone()


    if is_filter_enabled[0] == True:
        if 'fuck' in user_message or '–ø–∏–∑–¥–∞' in user_message or '—Å—É–∫–∞' in user_message or '–ø–∏–¥–æ—Ä' in user_message or '—Ö—É–π' in user_message or '–æ—á–∫–æ' in user_message or '–µ–≤—Ä–µ–∏' in user_message or '–±–ª—è—Ç—å' in user_message or '–≥–∞–Ω–¥–æ–Ω' in user_message or '–ø–∏–∑–¥–µ—Ü' in user_message or 'pidor' in user_message or 'gay' in user_message or 'nigger' in user_message or '–≤–∞–≥–∏–Ω–∞' in user_message or 'gandon' in user_message or '–∫–æ–Ω—á–∞' in user_message or '—à–∞–ª–∞–≤–∞' in user_message or '—Ö—É–π–Ω—è' in user_message:
            await message.channel.purge(limit = 1)

            await message.channel.send(f'{message.author.mention} ‚Äπ‚õî‚Ä∫ *filter detected bad word*. ‚Äπ‚õî‚Ä∫')
        else:
            pass



    about_person = curs.execute('SELECT about FROM bio WHERE userid == ?', (f'{message.author.id}',)).fetchone()

    if about_person == None:
        curs.execute('INSERT INTO bio VALUES(?, ?, ?)', (f'{message.author.id}', 'not stated', 'not stated'))
        data_base.commit()
    else:
        pass


    user_messages = curs.execute('SELECT msgs FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{author_id}')).fetchone()

    if user_messages == None:
        curs.execute('INSERT INTO level VALUES(?, ?, ?, ?)', (f'{server_name}', f'{author_id}', 1, 0))
        data_base.commit()
    else:
        got_message = int(user_messages[0]) + 1
        curs.execute('UPDATE level SET msgs == ? WHERE servername == ? AND userid == ?', (f'{got_message}', f'{server_name}', f'{author_id}'))
        data_base.commit()
        
        if got_message == 40:
            level = curs.execute('SELECT lvl FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{author_id}')).fetchone()
            if int(level[0]) == 0:
                curs.execute('UPDATE level SET lvl == ? WHERE servername == ? AND userid == ?', (1, f'{server_name}', f'{author_id}'))
                data_base.commit()

                emb = discord.Embed( title= message.author.name, colour = discord.Color.green())

                emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

                emb.add_field( name= message.author.name + '‚Äπüéâ‚Ä∫ New Level:', value='1')

                await message.channel.send(embed = emb)
            else:
                pass
        elif got_message == 100:
            level = curs.execute('SELECT lvl FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{author_id}')).fetchone()
            if int(level[0]) == 1:
                curs.execute('UPDATE level SET lvl == ? WHERE servername == ? AND userid == ?', (2, f'{server_name}', f'{author_id}'))
                data_base.commit()

                emb = discord.Embed( title= message.author.name, colour = discord.Color.green())

                emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

                emb.add_field( name= message.author.name + '‚Äπüéâ‚Ä∫ New Level:', value='2')

                await message.channel.send(embed = emb)
            else:
                pass
        elif got_message == 200:
            level = curs.execute('SELECT lvl FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{author_id}')).fetchone()
            if int(level[0]) == 2:
                curs.execute('UPDATE level SET lvl == ? WHERE servername == ? AND userid == ?', (3, f'{server_name}', f'{author_id}'))
                data_base.commit()

                emb = discord.Embed( title= message.author.name, colour = discord.Color.green())

                emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

                emb.add_field( name= message.author.name + '‚Äπüéâ‚Ä∫ New Level:', value='3')

                await message.channel.send(embed = emb)
            else:
                pass
        elif got_message == 550:
            level = curs.execute('SELECT lvl FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{author_id}')).fetchone()
            if int(level[0]) == 3:
                curs.execute('UPDATE level SET lvl == ? WHERE servername == ? AND userid == ?', (4, f'{server_name}', f'{author_id}'))
                data_base.commit()

                emb = discord.Embed( title= message.author.name, colour = discord.Color.green())

                emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

                emb.add_field( name= message.author.name + '‚Äπüéâ‚Ä∫ New Level:', value='4')

                await message.channel.send(embed = emb)
            else:
                pass
        elif got_message == 1000:
            level = curs.execute('SELECT lvl FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{author_id}')).fetchone()
            if int(level[0]) == 4:
                curs.execute('UPDATE level SET lvl == ? WHERE servername == ? AND userid == ?', (5, f'{server_name}', f'{author_id}'))
                data_base.commit()

                emb = discord.Embed( title= message.author.name, colour = discord.Color.green())

                emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

                emb.add_field( name= message.author.name + '‚Äπüéâ‚Ä∫ New Level:', value='5')

                await message.channel.send(embed = emb)
            else:
                pass
        elif got_message == 1500:
            level = curs.execute('SELECT lvl FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{author_id}')).fetchone()
            if int(level[0]) == 5:
                curs.execute('UPDATE level SET lvl == ? WHERE servername == ? AND userid == ?', (6, f'{server_name}', f'{author_id}'))
                data_base.commit()

                emb = discord.Embed( title= message.author.name, colour = discord.Color.green())

                emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

                emb.add_field( name= message.author.name + '‚Äπüéâ‚Ä∫ New Level:', value='6')

                await message.channel.send(embed = emb)
            else:
                pass
        elif got_message == 2000:
            level = curs.execute('SELECT lvl FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{author_id}')).fetchone()
            if int(level[0]) == 6:
                curs.execute('UPDATE level SET lvl == ? WHERE servername == ? AND userid == ?', (7, f'{server_name}', f'{author_id}'))
                data_base.commit()

                emb = discord.Embed( title= message.author.name, colour = discord.Color.green())

                emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

                emb.add_field( name= message.author.name + '‚Äπüéâ‚Ä∫ New Level:', value='7')

                await message.channel.send(embed = emb)
            else:
                pass




#set localization
@selentie.command(aliases = ['–ø–æ—Å—Ç–∞–≤–∏—Ç—å—è–∑—ã–∫', 'setlanguage', '–ø–æ—Å—Ç–∞–≤–∏—Ç—å_–ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é', '—è–∑—ã–∫_—Å–µ—Ä–≤–µ—Ä–∞', 'set_language'])
@commands.has_permissions( administrator = True )
async def set_localization(ctx, language):
    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    server_name = ctx.message.guild.name
    localization_id = 0

    if language == "russian":
        localization_id = 100
    elif language == "espanol":
        localization_id = 200
    elif language == "english":
        localization_id = 0
    else:
        await ctx.send(f"{ctx.author.mention} ‚Äπüö©‚Ä∫ *incorrect language name. you can call* ``$language_list`` *to get information*.")
        return

    curs.execute('UPDATE localization SET languageid == ? WHERE servername == ?', (f'{localization_id}', f'{server_name}'))
    data_base.commit()
    await ctx.send(f"{ctx.author.mention} *successfully changed localization for this server*.")



@selentie.command()
@commands.has_permissions( administrator = True )
async def language_list(ctx):
    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    localization_id_str = str(localization_id)
    localization_id_cleared = localization_id_str.replace("('", "")
    localization_id_cleared2 = localization_id_cleared.replace("',)", "")

    if int(localization_id_cleared2) == 0:
        emb = discord.Embed( title= "Languages:", colour = discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field( name='‚Äπüî∑‚Ä∫ english', value="```language have id 0.```")
        emb.add_field( name='‚Äπüî∑‚Ä∫ russian', value="```language have id 100.```")
        emb.add_field( name='‚Äπüî∑‚Ä∫ espanol', value="```language have id 200.```")

        await ctx.send(embed = emb)
    elif int(localization_id_cleared2) == 100:
        emb = discord.Embed( title= "–Ø–∑—ã–∫–∏:", colour = discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field( name='‚Äπüî∑‚Ä∫ english', value="```—É —è–∑—ã–∫–∞ –∞–π–¥–∏ 0.```")
        emb.add_field( name='‚Äπüî∑‚Ä∫ russian', value="```—É —è–∑—ã–∫–∞ –∞–π–¥–∏ 100.```")
        emb.add_field( name='‚Äπüî∑‚Ä∫ espanol', value="```—É —è–∑—ã–∫–∞ –∞–π–¥–∏ 200.```")

        await ctx.send(embed = emb)
    elif int(localization_id_cleared2) == 200:
        emb = discord.Embed( title= "lengua:", colour = discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field( name='‚Äπüî∑‚Ä∫ english', value="```la lengua de Aidi 0.```")
        emb.add_field( name='‚Äπüî∑‚Ä∫ russian', value="```la lengua de Aidi 100.```")
        emb.add_field( name='‚Äπüî∑‚Ä∫ espanol', value="```la lengua de Aidi 200.```")

        await ctx.send(embed = emb)





@selentie.command()
@commands.has_permissions( administrator = True )
async def settings(ctx):
    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    localization_id_str = str(localization_id)
    localization_id_cleared = localization_id_str.replace("('", "")
    localization_id_cleared2 = localization_id_cleared.replace("',)", "")

    if int(localization_id_cleared2) == 0:
        emb = discord.Embed( title= "‚Äπüî∞‚Ä∫ Settings:", colour = discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field( name='{}set_localization <language>'.format( PREFIX ), value="```sets localization of bot on current server.```")
        emb.add_field( name='{}set_report_channel <channel_id>'.format( PREFIX ), value="```sets a channel where reports will be send.```")
        emb.add_field( name='{}chatfilter <Enbale/Disable>'.format( PREFIX ), value="```sets chat filter enbabled or disabled on current server.```")
        emb.add_field( name='{}set_user_role <role_id>'.format( PREFIX ), value="```sets a user role to verify in current server.```")

        await ctx.send(embed = emb)
    elif int(localization_id_cleared2) == 100:
        emb = discord.Embed( title= "‚Äπüî∞‚Ä∫ –ù–∞—Å—Ç—Ä–æ–π–∫–∏:", colour = discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field( name='{}set_localization <language>'.format( PREFIX ), value="```–≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é –±–æ—Ç–∞ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.```")
        emb.add_field( name='{}set_report_channel <channel_id>'.format( PREFIX ), value="```–≤—ã—Å—Ç–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –∫—É–¥–∞ —Ä–µ–ø–æ—Ä—Ç—ã –±—É–¥—É—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å—Å—è.```")
        emb.add_field( name='{}chatfilter <Enbale/Disable>'.format( PREFIX ), value="```–≤–∫–ª—é—á–∞–µ—Ç –∏–ª–∏ –≤—ã–∫–ª—é—á–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é —á–∞—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.```")
        emb.add_field( name='{}set_user_role <role_id>'.format( PREFIX ), value="```–≤—ã—Å—Ç–∞–≤–∏—Ç—å —Ä–æ–ª—å —é–∑–µ—Ä–∞ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–π –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.```")

        await ctx.send(embed = emb)
    elif int(localization_id_cleared2) == 200:
        emb = discord.Embed( title= "‚Äπüî∞‚Ä∫ Ajustes:", colour = discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field( name='{}set_localization <language>'.format( PREFIX ), value="```expone la localizaci√≥n del bot en este servidor.```")
        emb.add_field( name='{}set_report_channel <channel_id>'.format( PREFIX ), value="```poner un canal donde los reporteros ser√°n enviados.```")
        emb.add_field( name='{}chatfilter <Enbale/Disable>'.format( PREFIX ), value="```activa o desactiva el filtrado de chat en el servidor.```")
        emb.add_field( name='{}set_user_role <role_id>'.format( PREFIX ), value="```establecer el rol de usuario para las verificaciones en este servidor.```")

        await ctx.send(embed = emb)



@selentie.command(aliases = ['server', 'statistic', '—Å–µ—Ä–≤–µ—Ä', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'stats'])
async def server_stats(ctx):
    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    commands_cout = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{server_name}',)).fetchone()
    total_cmd_cout = int(commands_cout[0])

    messages_cout = curs.execute('SELECT messagecout FROM messages WHERE servername == ?', (f'{server_name}',)).fetchone()
    messages_ct = int(messages_cout[0])

    is_filter_enabled = curs.execute('SELECT working FROM chatfilter WHERE servername == ?', (f'{server_name}',)).fetchone()

    total_filter = 'False'
    if is_filter_enabled[0] == False:
        total_filter = 'False'
    else:
        total_filter = 'True'

    server_icon = ctx.guild.icon_url

    if lang_id == 0:
        emb = discord.Embed( title= '***' + server_name + '***', colour = discord.Color.green())

        emb.set_thumbnail(url=server_icon)

        emb.add_field( name='‚Äπüìß‚Ä∫ Messages:', value= '```' + str(messages_ct) + '```')
        emb.add_field( name='‚Äπüî∞‚Ä∫ Chat Filter:', value= '```' + total_filter + '```')
        emb.add_field( name='‚Äπüë•‚Ä∫ Members:', value='```' +  str(ctx.guild.member_count) + '```')
        emb.add_field( name='‚Äπüí¨‚Ä∫ Language:', value= '```' + "English" + '```')
        emb.add_field( name='‚Äπüíª‚Ä∫ Selentie commands called:', value='```' + str(total_cmd_cout) +  '```')

        await ctx.send(embed = emb)
    elif lang_id == 100:
        emb = discord.Embed( title= '***' + server_name + '***', colour = discord.Color.green())

        emb.set_thumbnail(url=server_icon)

        emb.add_field( name='‚Äπüìß‚Ä∫ –°–æ–æ–±—â–µ–Ω–∏—è:', value= '```' + str(messages_ct) + '```')
        emb.add_field( name='‚Äπüî∞‚Ä∫ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ß–∞—Ç–∞:', value= '```' + total_filter + '```')
        emb.add_field( name='‚Äπüë•‚Ä∫ –£—á–∞—Å—Ç–Ω–∏–∫–∏:', value='```' +  str(ctx.guild.member_count) + '```')
        emb.add_field( name='‚Äπüí¨‚Ä∫ –Ø–∑—ã–∫:', value= '```' + "–†—É—Å—Å–∫–∏–π" + '```')
        emb.add_field( name='‚Äπüíª‚Ä∫ –í—Å–µ–≥–æ –∫–æ–º–º–∞–Ω–¥ Selentie:', value='```' + str(total_cmd_cout) +  '```')

        await ctx.send(embed = emb)
    elif lang_id == 200:
        emb = discord.Embed( title= '***' + server_name + '***', colour = discord.Color.green())

        emb.set_thumbnail(url=server_icon)

        emb.add_field( name='‚Äπüìß‚Ä∫ Mensajes:', value= '```' + str(messages_ct) + '```')
        emb.add_field( name='‚Äπüî∞‚Ä∫ Filtrado De Chat:', value= '```' + total_filter + '```')
        emb.add_field( name='‚Äπüë•‚Ä∫ Agentes:', value='```' +  str(ctx.guild.member_count) + '```')
        emb.add_field( name='‚Äπüí¨‚Ä∫ Idioma:', value= '```' + "Espanol" + '```')
        emb.add_field( name='‚Äπüíª‚Ä∫ Total de comandos:', value='```' + str(total_cmd_cout) +  '```')

        await ctx.send(embed = emb)




@selentie.command()
async def help(ctx):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if lang_id == 0:
        emb = discord.Embed(title='‚Äπüìö‚Ä∫ My Commands:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '{}clear <amount>'.format(PREFIX), value='```clearing messages in chat.```')
        emb.add_field(name= '{}verify'.format(PREFIX), value='```makes you verify on current server.```')
        emb.add_field(name= '{}ticket'.format(PREFIX), value='```creates a ticket.```')
        emb.add_field(name= '{}bio_commands'.format(PREFIX), value='```gives you biography commands.```')
        emb.add_field(name= '{}report <username> <reason>'.format(PREFIX), value='```reports a user for reason to special channel.```')
        emb.add_field(name= '{}joke'.format(PREFIX), value='```telling random joke.```')
        emb.add_field(name= '{}kick <username> <reason>'.format(PREFIX), value='```kicks user from current server.```')
        emb.add_field(name= '{}ban <username> <reason>'.format(PREFIX), value='```bans people from server for reason.```')
        emb.add_field(name= '{}unban <user_id>'.format(PREFIX), value='```unbans if user banned on server.```')
        emb.add_field(name= '{}warn <username> <reason>'.format(PREFIX), value='```gives warn to user, if you got 3 you will be banned.```')
        emb.add_field(name= '{}translate <text>'.format(PREFIX), value='```translates text into your localization.```')
        emb.add_field(name= '{}clearwarns <username>'.format(PREFIX), value='```removes warns from user.```')
        emb.add_field(name= '{}decode <text>'.format(PREFIX), value='```decodes encrypted text and pushes result.```')
        emb.add_field(name= '{}settings'.format(PREFIX), value='```sends list of settings.```')
        emb.add_field(name= '{}server_stats'.format(PREFIX), value='```shows list of server stats.```')
        emb.add_field(name= '{}servers'.format(PREFIX), value='```shows a cout of the server where are bot invited.```')
        emb.add_field(name= '{}language_list'.format(PREFIX), value='```shows list of languages.```')
        emb.add_field(name= '{}wink'.format(PREFIX), value='```returns a random anime winking gif.```')
        emb.add_field(name= '{}minecraft <nickname>'.format(PREFIX), value='```returns information about minecraft player.```')
        emb.add_field(name= '{}binary_encode <text>'.format(PREFIX), value='```returns encoded binary code.```')
        emb.add_field(name= '{}binary_decode <binary>'.format(PREFIX), value='```returns decoded text.```')
        emb.add_field(name= '{}ipinfo <ip>'.format(PREFIX), value='```return information about ip address.```')
        emb.add_field(name= '{}pat'.format(PREFIX), value='```returns a random anime patting gif.```')
        emb.add_field(name= '{}hug'.format(PREFIX), value='```returns a random anime hugging gif.```')
        emb.add_field(name= '{}set_localization <language>'.format(PREFIX), value='```sets a language localization to this server.```')

        await ctx.send(embed = emb)
    elif lang_id == 100:
        emb = discord.Embed(title='‚Äπüìö‚Ä∫ –ú–æ–∏ –ö–æ–º–º–∞–Ω–¥—ã:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '{}clear <amount>'.format(PREFIX), value='```–æ—á–∏—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ.```')
        emb.add_field(name= '{}verify'.format(PREFIX), value='```–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.```')
        emb.add_field(name= '{}ticket'.format(PREFIX), value='```—Å–æ–∑–¥–∞—ë—Ç—å—Å—è —Ç–∏–∫–µ—Ç.```')
        emb.add_field(name= '{}bio_commands'.format(PREFIX), value='```–≤—ã–¥–∞—ë—Ç –∫–æ–º–º–∞–Ω–¥—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å–≤–æ–µ–π –±–∏–æ–≥—Ä–∞—Ñ–∏–µ–π.```')
        emb.add_field(name= '{}report <username> <reason>'.format(PREFIX), value='```–∫–∏–Ω—É—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ.```')
        emb.add_field(name= '{}joke'.format(PREFIX), value='```—Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é —à—É—Ç–∫—É.```')
        emb.add_field(name= '{}kick <username> <reason>'.format(PREFIX), value='```–≤—ã–≥–æ–Ω—è–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞.```')
        emb.add_field(name= '{}ban <username> <reason>'.format(PREFIX), value='```–≤—ã–¥–∞—ë—Ç –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ –ø—Ä–∏—á–∏–Ω–µ.```')
        emb.add_field(name= '{}unban <user_id>'.format(PREFIX), value='```—Ä–∞–∑–±–∞–Ω–∏–≤–∞–µ—Ç –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.```')
        emb.add_field(name= '{}warn <username> <reason>'.format(PREFIX), value='```–≤—ã–¥–∞—ë—Ç –≤–∞—Ä–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –µ—Å–ª–∏ —É –Ω–µ–≥–æ 3 –≤–∞—Ä–Ω–∞, —Ç–æ –±–∞–Ω.```')
        emb.add_field(name= '{}translate <text>'.format(PREFIX), value='```–ø–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –≤ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞.```')
        emb.add_field(name= '{}clearwarns <username>'.format(PREFIX), value='```—É–¥–∞–ª—è–µ—Ç –≤—Å–µ –≤–∞—Ä–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.```')
        emb.add_field(name= '{}decode <text>'.format(PREFIX), value='```–¥–µ–∫–æ–¥–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∏ –≤—ã–¥–∞—ë—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.```')
        emb.add_field(name= '{}settings'.format(PREFIX), value='```–≤—ã—Å–∞–ª–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.```')
        emb.add_field(name= '{}server_stats'.format(PREFIX), value='```–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏—Å—Ç —Å–µ—Ä–≤–µ—Ä —Å—Ç–∞—Ç—É—Å–∞.```')
        emb.add_field(name= '{}servers'.format(PREFIX), value='```–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –±–æ—Ç.```')
        emb.add_field(name= '{}language_list'.format(PREFIX), value='```–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏—Å—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ.```')
        emb.add_field(name= '{}wink'.format(PREFIX), value='```–≤–æ–∑—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –ø–æ–¥–º–∏–≥–∏–≤–∞—é—â–∏—é –≥–∏—Ñ–∫—É —Å —Ç—è–Ω–∫–æ–π –∞–Ω–∏–º–µ.```')
        emb.add_field(name= '{}minecraft <nickname>'.format(PREFIX), value='```–≤—ã–¥–∞—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç –∏–≥—Ä–æ–∫–µ.```')
        emb.add_field(name= '{}binary_encode <text>'.format(PREFIX), value='```–≤—ã–¥–∞—ë—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –¥–≤–æ—á–Ω–æ–º(–±–∏–Ω–∞—Ä–Ω–æ–º) –∫–æ–¥–µ.```')
        emb.add_field(name= '{}binary_decode <binary>'.format(PREFIX), value='```–≤—ã–¥–∞—ë—Ç —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã–π —Ç–µ–∫—Å—Ç.```')
        emb.add_field(name= '{}ipinfo <ip>'.format(PREFIX), value='```–≤–æ–∑—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–π–ø–∏.```')
        emb.add_field(name= '{}pat'.format(PREFIX), value='```–≤–æ–∑—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –≥–∏—Ñ–∫—É –ø–æ—Ö–ª–æ–ø—ã–≤–∞–Ω–∏–µ –∞–Ω–∏–º–µ —Ç—è–Ω.```')
        emb.add_field(name= '{}hug'.format(PREFIX), value='```–≤–æ–∑—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –≥–∏—Ñ–∫—É –æ–±–Ω–∏–º–∞—é—â–µ–π—Å—è –∞–Ω–∏–º–µ —Ç—è–Ω.```')
        emb.add_field(name= '{}set_localization <language>'.format(PREFIX), value='```–≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é —è–∑—ã–∫–∞ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.```')

        await ctx.send(embed = emb)
    elif lang_id == 200:
        emb = discord.Embed(title='‚Äπüìö‚Ä∫ Mis Comandos:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '{}clear <amount>'.format(PREFIX), value='```borra los mensajes de chat.```')
        emb.add_field(name= '{}verify'.format(PREFIX), value='```verifique en este servidor.```')
        emb.add_field(name= '{}ticket'.format(PREFIX), value='```crea ticket.```')
        emb.add_field(name= '{}bio_commands'.format(PREFIX), value='```emite comando de interacci√≥n con su biograf√≠a.```')
        emb.add_field(name= '{}report <username> <reason>'.format(PREFIX), value='```lanzar una queja contra el usuario por una raz√≥n.```')
        emb.add_field(name= '{}joke'.format(PREFIX), value='```cuenta una broma al azar.```')
        emb.add_field(name= '{}kick <username> <reason>'.format(PREFIX), value='```expulsa a un miembro del servidor.```')
        emb.add_field(name= '{}ban <username> <reason>'.format(PREFIX), value='```emite Ban al usuario por una raz√≥n.```')
        emb.add_field(name= '{}unban <user_id>'.format(PREFIX), value='```desbarata si el usuario est√° Prohibido.```')
        emb.add_field(name= '{}warn <username> <reason>'.format(PREFIX), value='```da Varna al usuario, si tiene 3 Varna, entonces Ban.```')
        emb.add_field(name= '{}translate <text>'.format(PREFIX), value='```traduce texto a texto de la localizaci√≥n del servidor.```')
        emb.add_field(name= '{}clearwarns <username>'.format(PREFIX), value='```elimina todos los Varna del usuario.```')
        emb.add_field(name= '{}decode <text>'.format(PREFIX), value='```decodifica el texto y produce el resultado.```')
        emb.add_field(name= '{}settings'.format(PREFIX), value='```sale de la configuraci√≥n.```')
        emb.add_field(name= '{}server_stats'.format(PREFIX), value='```muestra la hoja de estado del servidor.```')
        emb.add_field(name= '{}servers'.format(PREFIX), value='```muestra el n√∫mero de servidores en los que se encuentra el bot.```')
        emb.add_field(name= '{}language_list'.format(PREFIX), value='```muestra la hoja de idiomas disponibles para la instalaci√≥n.```')
        emb.add_field(name= '{}wink'.format(PREFIX), value='```revive un gui√±o al azar GIF con anime de tir√≥n.```')
        emb.add_field(name= '{}minecraft <nickname>'.format(PREFIX), value='```da informaci√≥n sobre el jugador de Minecraft.```')
        emb.add_field(name= '{}binary_encode <text>'.format(PREFIX), value='```emite texto cifrado en c√≥digo binario (binario) .```')
        emb.add_field(name= '{}binary_decode <binary>'.format(PREFIX), value='```emite texto descifrado.```')
        emb.add_field(name= '{}ipinfo <ip>'.format(PREFIX), value='```recupera informaci√≥n sobre IPI.```')
        emb.add_field(name= '{}pat'.format(PREFIX), value='```devuelve GIF aleatorio palmaditas anime Chan.```')
        emb.add_field(name= '{}hug'.format(PREFIX), value='```devuelve un GIF al azar abrazando anime Chan.```')
        emb.add_field(name= '{}set_localization <language>'.format(PREFIX), value='```expone la localizaci√≥n del idioma en este servidor.```')

        await ctx.send(embed = emb)



@selentie.command()
@commands.has_permissions(administrator = True)
async def clear(ctx, amount = 100):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    await ctx.channel.purge( limit = amount )

    if lang_id == 0:
        emb = discord.Embed( title= '‚Äπüìõ‚Ä∫ Cleared:', colour = discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field( name='üìß Messages:', value='*Deleted* ' + str(amount))

        await ctx.send(embed = emb)
    elif lang_id == 100:
        emb = discord.Embed( title= '‚Äπüìõ‚Ä∫ –û—á–∏—â–µ–Ω–æ:', colour = discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field( name='üìß –°–æ–æ–±—â–µ–Ω–∏–π:', value='*–£–¥–∞–ª–µ–Ω–æ* ' + str(amount))

        await ctx.send(embed = emb)
    elif lang_id == 200:
        emb = discord.Embed( title= '‚Äπüìõ‚Ä∫ Limpio:', colour = discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field( name='üìß Mensajes:', value='*Remoto* ' + str(amount))

        await ctx.send(embed = emb)



@selentie.command()
@commands.has_permissions(administrator = True)
async def kick(ctx, username : discord.Member, *, kick_reason, ):
    server_name = ctx.message.guild.name
    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    await ctx.channel.purge(limit = 1)

    await username.kick(reason=kick_reason)

    if lang_id == 0:
       emb = discord.Embed(title='‚Äπüö©‚Ä∫ Kicked:', colour=discord.Color.green())

       emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

       emb.add_field(name= f'{username}', value='Reason: ' + "```" + str(kick_reason) + "```")
        
       await ctx.send(embed = emb)
    elif lang_id == 100:
       emb = discord.Embed(title='‚Äπüö©‚Ä∫ –ò—Å–∫–ª—é—á—ë–Ω:', colour=discord.Color.green())

       emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

       emb.add_field(name= f'{username}', value='–ü—Ä–∏—á–∏–Ω–∞: ' + "```" + str(kick_reason) + "```")
        
       await ctx.send(embed = emb)
    elif lang_id == 200:
       emb = discord.Embed(title='‚Äπüö©‚Ä∫ Excluyo:', colour=discord.Color.green())

       emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

       emb.add_field(name= f'{username}', value='Raz√≥n: ' + "```" + str(kick_reason) + "```")
        
       await ctx.send(embed = emb)
    



@selentie.command()
@commands.has_permissions(administrator = True)
async def decode(ctx, *, text,):
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    response = requests.post('https://www.artlebedev.ru/tools/decoder/ajax.html', data={ 'msg': text })

    if response.status_code == 200:
        response_jsoned = response.json()
        decoded = response_jsoned['text']

        if lang_id == 0:
            emb = discord.Embed(title='‚Äπüîì‚Ä∫ Decoded:', colour=discord.Color.green())

            emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

            emb.add_field(name= 'Decoded String:', value='Total: ' + "```" + str(decoded) + "```")
        
            await ctx.send(embed = emb)
        elif lang_id == 100:
            emb = discord.Embed(title='‚Äπüîì‚Ä∫ –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ:', colour=discord.Color.green())

            emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

            emb.add_field(name= '–î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∞—è –°—Ç—Ä–æ—á–∫–∞:', value='–ò—Ç–æ–≥: ' + "```" + str(decoded) + "```")
        
            await ctx.send(embed = emb)
        elif lang_id == 200:
            emb = discord.Embed(title='‚Äπüîì‚Ä∫ Descifro:', colour=discord.Color.green())

            emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

            emb.add_field(name= 'Costura Decodificada:', value='Resultado: ' + "```" + str(decoded) + "```")
        
            await ctx.send(embed = emb)
    else:
        if lang_id == 0:
            ctx.send(f'{ctx.author.mention} *request didnt got respond*.')
        elif lang_id == 100:
            ctx.send(f'{ctx.author.mention} *–∑–∞–ø—Ä–æ—Å –Ω–µ –±—ã–ª —É—Å–ø–µ—à–µ–Ω*.')
        elif lang_id == 200:
            ctx.send(f'{ctx.author.mention} *la solicitud no tuvo √©xito*.')






@selentie.command()
@commands.has_permissions(administrator = True)
async def warn(ctx, username: discord.Member, *, warn_reason,):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    warns = curs.execute('SELECT warns FROM warnings WHERE user == ? AND servername == ?', (f'{username}', f'{server_name}')).fetchone()

    await ctx.channel.purge(limit = 1)

    if warns == None:
        curs.execute('INSERT INTO warnings VALUES(?, ?, ?)', (f'{server_name}', f'{username}', f'{1}'))
        data_base.commit()
        if lang_id == 0:
            await ctx.send(f'{username.mention} ‚Äπ‚ùó‚Ä∫ *You got first warn for* **{warn_reason}**.')
        elif lang_id == 100:
            await ctx.send(f'{username.mention} ‚Äπ‚ùó‚Ä∫ *–¢—ã –ø–æ–ª—É—á–∏–ª —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –≤–∞—Ä–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ* **{warn_reason}**.')
        elif lang_id == 200:
            await ctx.send(f'{username.mention} ‚Äπ‚ùó‚Ä∫ *Tienes tu primer varn por una raz√≥n* **{warn_reason}**.')
    if int(warns[0]) == 1:
        curs.execute('UPDATE warnings SET warns == ? WHERE user == ? AND servername == ?', (f'{2}', f'{username}', f'{server_name}'))
        data_base.commit()
        if lang_id == 0:
            await ctx.send(f'{username.mention} ‚Äπ‚ùó‚Ä∫ *You got second warn for* **{warn_reason}**.')
        elif lang_id == 100:
            await ctx.send(f'{username.mention} ‚Äπ‚ùó‚Ä∫ *–¢—ã –ø–æ–ª—É—á–∏–ª —Å–≤–æ–π –≤—Ç–æ—Ä–æ–π –≤–∞—Ä–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ* **{warn_reason}**.')
        elif lang_id == 200:
            await ctx.send(f'{username.mention} ‚Äπ‚ùó‚Ä∫ *Tienes tu segundo varn por una raz√≥n* **{warn_reason}**.')
    if int(warns[0]) == 2:
        curs.execute('UPDATE warnings SET warns == ? WHERE user == ? AND servername == ?', (f'{3}', f'{username}', f'{server_name}'))
        data_base.commit()
        if lang_id == 0:
            await username.ban(reason='warns limit reached.')

            emb = discord.Embed(title='‚Äπüö®‚Ä∫ Banned:', colour=discord.Color.green())

            emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

            emb.add_field(name= f'{username}', value='Reason: reached warns limit.')
        
            await ctx.send(embed = emb)
        elif lang_id == 100:
             await username.ban(reason='–ª–∏–º–∏—Ç –≤–∞—Ä–Ω–æ–≤ –ø—Ä–∏–≤—ã—à–µ–Ω.')

             emb = discord.Embed(title='‚Äπüö®‚Ä∫ –ó–∞–±–∞–Ω–µ–Ω:', colour=discord.Color.green())

             emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

             emb.add_field(name= f'{username}', value='–ü—Ä–∏—á–∏–Ω–∞: –ø—Ä–∏–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç –≤–∞—Ä–Ω–æ–≤.')
        
             await ctx.send(embed = emb)
        elif lang_id == 200:
             await username.ban(reason='l√≠mite de Varna.')

             emb = discord.Embed(title='‚Äπüö®‚Ä∫ Prohibido:', colour=discord.Color.green())

             emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

             emb.add_field(name= f'{username}', value='La raz√≥n: el l√≠mite de varnov.')
        
             await ctx.send(embed = emb)




@selentie.command(aliases = ['—É–±—Ä–∞—Ç—å–≤–∞—Ä–Ω—ã', '—É–¥–∞–ª–∏—Ç—å–≤–∞—Ä–Ω—ã', '—Å–Ω—è—Ç—å–≤–∞—Ä–Ω—ã', 'deletewarns', 'removewarns'])
@commands.has_permissions(administrator = True)
async def clearwarns(ctx, username: discord.Member):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    warns = curs.execute('SELECT warns FROM warnings WHERE user == ? AND servername == ?', (f'{username}', f'{server_name}')).fetchone()


    if warns == None:
        if lang_id == 0:
         await ctx.send(f'{username.mention} ‚Äπ‚ùå‚Ä∫ *You dont have warns!* ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
         await ctx.send(f'{username.mention} ‚Äπ‚ùå‚Ä∫ *–£ —Ç–µ–±—è –Ω–µ—Ç—É –≤–∞—Ä–Ω–æ–≤!* ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
         await ctx.send(f'{username.mention} ‚Äπ‚ùå‚Ä∫ *¬°No tienes Varnas!* ‚Äπ‚ùå‚Ä∫')
    else:
        curs.execute('UPDATE warnings SET warns == ? WHERE user == ? AND servername == ?', (f'{0}', f'{username}', f'{server_name}'))
        data_base.commit()
        if lang_id == 0:
          await ctx.send(f'{username.mention} ‚Äπ‚úÖ‚Ä∫ *Your warns got deleted!* ‚Äπ‚úÖ‚Ä∫')
        elif lang_id == 100:
          await ctx.send(f'{username.mention} ‚Äπ‚úÖ‚Ä∫ *–¢–≤–æ–∏ –≤–∞—Ä–Ω—ã –±—ã–ª–∏ —Å–Ω—è—Ç—ã!* ‚Äπ‚úÖ‚Ä∫')
        elif lang_id == 200:
          await ctx.send(f'{username.mention} ‚Äπ‚úÖ‚Ä∫ *¬°Tus Varnas fueron filmadas!* ‚Äπ‚úÖ‚Ä∫')




@selentie.command()
@commands.has_permissions(administrator = True)
async def ban(ctx, username: discord.Member, *, ban_reason):
    server_name = ctx.message.guild.name

    await ctx.channel.purge(limit= 1)

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    if lang_id == 0:
        await username.ban(reason= ban_reason)

        emb = discord.Embed(title='‚Äπüö®‚Ä∫ Banned:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= f'{username}', value='Reason: ' + str(ban_reason))
        
        await ctx.send(embed = emb)
    elif lang_id == 100:
        await username.ban(reason=ban_reason)

        emb = discord.Embed(title='‚Äπüö®‚Ä∫ –ó–∞–±–∞–Ω–µ–Ω:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= f'{username}', value='–ü—Ä–∏—á–∏–Ω–∞: ' + str(ban_reason))
        
        await ctx.send(embed = emb)
    elif lang_id == 200:
        await username.ban(reason=ban_reason)

        emb = discord.Embed(title='‚Äπüö®‚Ä∫ Prohibido:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= f'{username}', value='Raz√≥n: ' + str(ban_reason))
        
        await ctx.send(embed = emb)




@selentie.command()
@commands.has_permissions( administrator = True )
async def unban(ctx, id):
    server_name = ctx.message.guild.name

    await ctx.channel.purge( limit = 1 )

    banned_users = await ctx.guild.bans()
    
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

  
    user = await selentie.fetch_user(id)
    await ctx.guild.unban(user)

 
    if lang_id == 0:
            emb = discord.Embed(title= '‚Äπ‚úÖ‚Ä∫ Unban', colour=discord.Color.green())

            emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

            emb.add_field(name= 'Unbaned:', value='User: ' + "```" +  str(user) + "```")
        
            await ctx.send(embed = emb)
    elif lang_id == 100:
            emb = discord.Embed(title= '‚Äπ‚úÖ‚Ä∫ –†–∞–∑–±–∞–Ω', colour=discord.Color.green())

            emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

            emb.add_field(name= '–†–∞–∑–±–∞–Ω–µ–Ω:', value='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ' + "```" +  str(user) + "```")
        
            await ctx.send(embed = emb)
    elif lang_id == 200:
            emb = discord.Embed(title= '‚Äπ‚úÖ‚Ä∫ Roto', colour=discord.Color.green())

            emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

            emb.add_field(name= 'Roto:', value='Usuario: ' + "```" +  str(user) + "```")
        
            await ctx.send(embed = emb)


        

@selentie.command()
async def translate(ctx, *, text):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if lang_id == 0:
        response = requests.get(f"https://t23.translatedict.com/1.php?p1=auto&p2=eng&p3={text}", json={ 'p1': 'auto', 'p2': 'eng', 'p3': text })
        translated = response.text

        emb = discord.Embed(title='‚Äπ‚ö°‚Ä∫ Translated:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= f'Translated Text:', value= f'```{translated}```')
        
        await ctx.send(embed = emb)
    elif lang_id == 100:
        response = requests.get(f"https://t23.translatedict.com/1.php?p1=auto&p2=ru&p3={text}", json={ 'p1': 'auto', 'p2': 'ru', 'p3': text })
        translated = response.text

        emb = discord.Embed(title='‚Äπ‚ö°‚Ä∫ –ü–µ—Ä–µ–≤–æ–¥:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= f'–ü–µ—Ä–µ–≤–æ–¥ –¢–µ–∫—Å—Ç–∞:', value= f'```{translated}```')
        
        await ctx.send(embed = emb)
    elif lang_id == 200:
        response = requests.get(f"https://t23.translatedict.com/1.php?p1=auto&p2=es&p3={text}", json={ 'p1': 'auto', 'p2': 'es', 'p3': text })
        translated = response.text

        emb = discord.Embed(title='‚Äπ‚ö°‚Ä∫ Traducci√≥n:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= f'Traducci√≥n De Texto:', value= f'```{translated}```')
        
        await ctx.send(embed = emb)




@selentie.command()
async def joke(ctx):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if lang_id == 0:
        response = requests.get('https://some-random-api.ml/joke')

        joke = response.json()['joke']
        await ctx.send(f'{ctx.author.mention} ' + "*" +  str(joke) + "*")
    elif lang_id == 100:
        response = requests.get('https://some-random-api.ml/joke')

        joke = response.json()['joke']

        translate = requests.get(f"https://t23.translatedict.com/1.php?p1=auto&p2=ru&p3={joke}", json={ 'p1': 'auto', 'p2': 'ru', 'p3': joke })
        translated_joke = translate.text
        await ctx.send(f'{ctx.author.mention} ' + "*" +  str(translated_joke) + "*")
    elif lang_id == 200:
        response = requests.get('https://some-random-api.ml/joke')

        joke = response.json()['joke']

        translate = requests.get(f"https://t23.translatedict.com/1.php?p1=auto&p2=es&p3={joke}", json={ 'p1': 'auto', 'p2': 'es', 'p3': joke })
        translated_joke = translate.text
        await ctx.send(f'{ctx.author.mention} ' + "*" +  str(translated_joke) + "*")




@selentie.command()
async def wink(ctx):
    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    server_name = ctx.message.guild.name

    response = requests.get('https://some-random-api.ml/animu/wink')
    gif = response.json()['link']
    await ctx.send(f'{ctx.author.mention} ' + str(gif))




@selentie.command()
async def pat(ctx):
    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    server_name = ctx.message.guild.name

    response = requests.get('https://some-random-api.ml/animu/pat')
    gif = response.json()['link']
    await ctx.send(f'{ctx.author.mention} ' + str(gif))




@selentie.command()
async def hug(ctx):
    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    server_name = ctx.message.guild.name

    response = requests.get('https://some-random-api.ml/animu/hug')
    gif = response.json()['link']
    await ctx.send(f'{ctx.author.mention} ' + str(gif))



@selentie.command()
async def ipinfo(ctx, ip_address):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    response = requests.get(f'http://ip-api.com/json/{ip_address}')

    country = response.json()['country']
    contry_code = response.json()['countryCode']
    city = response.json()['city']
    provider = response.json()['org']
    zip_code = response.json()['zip']
    timezone = response.json()['timezone']
    lat = response.json()['lat']
    lon = response.json()['lon']

    if lang_id == 0:
        emb = discord.Embed(title='IP Information:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= f'‚Äπüåç‚Ä∫ Country:', value=country)
        emb.add_field(name= f'‚Äπüìë‚Ä∫ Country Code:', value=contry_code)
        emb.add_field(name= f'‚Äπüè†‚Ä∫ City:', value=city)
        emb.add_field(name= f'‚Äπüîå‚Ä∫ Provider:', value=provider)
        emb.add_field(name= f'‚Äπüì¨‚Ä∫ Zip Code:', value=zip_code)
        emb.add_field(name= f'‚Äπüï•‚Ä∫ Timezone:', value=timezone)
        emb.add_field(name= f'‚Äπ‚ö´‚Ä∫ lat:', value=lat)
        emb.add_field(name= f'‚Äπ‚¨õ‚Ä∫ lon:', value=lon)
        
        await ctx.send(embed = emb)
    elif lang_id == 100:
        emb = discord.Embed(title='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–π–ø–∏:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= f'‚Äπüåç‚Ä∫ –†–µ–≥–∏–æ–Ω:', value=country)
        emb.add_field(name= f'‚Äπüìë‚Ä∫ –ö–æ–¥ –†–µ–≥–∏–æ–Ω–∞:', value=contry_code)
        emb.add_field(name= f'‚Äπüè†‚Ä∫ –ì–æ—Ä–æ–¥:', value=city)
        emb.add_field(name= f'‚Äπüîå‚Ä∫ –ü—Ä–æ–≤–∞–π–¥–µ—Ä:', value=provider)
        emb.add_field(name= f'‚Äπüì¨‚Ä∫ –ü–æ—á—Ç–æ–≤—ã–π –ò–Ω–¥–µ–∫—Å:', value=zip_code)
        emb.add_field(name= f'‚Äπüï•‚Ä∫ –ß–∞—Å–æ–≤–æ–π –ü–æ—è—Å:', value=timezone)
        emb.add_field(name= f'‚Äπ‚ö´‚Ä∫ —à–∏—Ä–æ—Ç–∞:', value=lat)
        emb.add_field(name= f'‚Äπ‚¨õ‚Ä∫ –¥–æ–ª–≥–æ—Ç–∞:', value=lon)
        
        await ctx.send(embed = emb)
    elif lang_id == 200:
        emb = discord.Embed(title='Informaci√≥n sobre IPI:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= f'‚Äπüåç‚Ä∫ Regi√≥n:', value=country)
        emb.add_field(name= f'‚Äπüìë‚Ä∫ C√≥digo De Regi√≥n:', value=contry_code)
        emb.add_field(name= f'‚Äπüè†‚Ä∫ Ciudad:', value=city)
        emb.add_field(name= f'‚Äπüîå‚Ä∫ Proveedor:', value=provider)
        emb.add_field(name= f'‚Äπüì¨‚Ä∫ C√≥digo Postal:', value=zip_code)
        emb.add_field(name= f'‚Äπüï•‚Ä∫ huso horario:', value=timezone)
        emb.add_field(name= f'‚Äπ‚ö´‚Ä∫ latitud:', value=lat)
        emb.add_field(name= f'‚Äπ‚¨õ‚Ä∫ longitud:', value=lon)
        
        await ctx.send(embed = emb)




@selentie.command(aliases = ['—è', 'me', 'bio', '–±–∏–æ', '–ø—Ä–æ—Ñ–∏–ª—å', 'profile'])
async def me_profile(ctx):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    user_level = curs.execute('SELECT lvl FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{ctx.author.id}')).fetchone()

    user_messages = curs.execute('SELECT msgs FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{ctx.author.id}')).fetchone()

    warns = curs.execute('SELECT warns FROM warnings WHERE user == ? AND servername == ?', (f'{ctx.author}', f'{server_name}')).fetchone()
    
    hooby = curs.execute('SELECT hooby FROM bio WHERE userid == ?', (f'{ctx.author.id}',)).fetchone()

    about = curs.execute('SELECT about FROM bio WHERE userid == ?', (f'{ctx.author.id}',)).fetchone()

    total_warns = 0
    if warns == None:
        total_warns = 0
    else:
        total_warns = warns[0]
    
    if lang_id == 0:
        emb = discord.Embed(title='Profile: ' + str(ctx.author.name), colour=discord.Color.green())

        emb.set_thumbnail(url=ctx.author.avatar_url)

        emb.add_field(name= '‚Äπüî∂‚Ä∫ ID:', value= '```' + str(ctx.author.id) + '```') 
        emb.add_field(name= '‚Äπ‚ú®‚Ä∫ Lvl:', value= '```' + str(user_level[0]) + '```')
        emb.add_field(name= '‚Äπüì®‚Ä∫ Messages:', value= '```' + user_messages[0] + '```')
        emb.add_field(name= '‚Äπ‚ùó‚Ä∫ Warnings:', value= '```' + str(total_warns) + '```')
        emb.add_field(name= '‚Äπüé®‚Ä∫ Hooby:', value= '```' + hooby[0] + '```')
        emb.add_field(name= '‚Äπüé©‚Ä∫ About:', value= '```' + about[0] + '```')
        
        await ctx.send(embed = emb)
    elif lang_id == 100:
        emb = discord.Embed(title='–ü—Ä–æ—Ñ–∏–ª—å: ' + str(ctx.author.name), colour=discord.Color.green())

        emb.set_thumbnail(url=ctx.author.avatar_url)

        emb.add_field(name= '‚Äπüî∂‚Ä∫ –ê–π–¥–∏:', value= '```' + str(ctx.author.id) + '```') 
        emb.add_field(name= '‚Äπ‚ú®‚Ä∫ –£—Ä–æ–≤–µ–Ω—å:', value= '```' + str(user_level[0]) + '```')
        emb.add_field(name= '‚Äπüì®‚Ä∫ –°–æ–æ–±—â–µ–Ω–∏—è:', value= '```' + user_messages[0] + '```')
        emb.add_field(name= '‚Äπ‚ùó‚Ä∫ –í–∞—Ä–Ω—ã:', value= '```' + str(total_warns) + '```')
        emb.add_field(name= '‚Äπüé®‚Ä∫ –•–æ–æ–±–∏:', value= '```' + hooby[0] + '```')
        emb.add_field(name= '‚Äπüé©‚Ä∫ –û–±–æ –º–Ω–µ:', value= '```' + about[0] + '```')
        
        await ctx.send(embed = emb)
    elif lang_id == 200:
        emb = discord.Embed(title='Perfil: ' + str(ctx.author.name), colour=discord.Color.green())

        emb.set_thumbnail(url=ctx.author.avatar_url)

        emb.add_field(name= '‚Äπüî∂‚Ä∫ Aidi:', value= '```' + str(ctx.author.id) + '```') 
        emb.add_field(name= '‚Äπ‚ú®‚Ä∫ nivel:', value= '```' + str(user_level[0]) + '```')
        emb.add_field(name= '‚Äπüì®‚Ä∫ mensajes:', value= '```' + user_messages[0] + '```')
        emb.add_field(name= '‚Äπ‚ùó‚Ä∫ Advertencia:', value= '```' + str(total_warns) + '```')
        emb.add_field(name= '‚Äπüé®‚Ä∫ Hooby:', value= '```' + hooby[0] + '```')
        emb.add_field(name= '‚Äπüé©‚Ä∫ Sobre:', value= '```' + about[0] + '```')
        
        await ctx.send(embed = emb)




@selentie.command()
async def write_hooby(ctx, *, user_hooby):
    server_name = ctx.message.guild.name

    curs.execute('UPDATE bio SET hooby == ? WHERE userid == ?', (f'{user_hooby}', f'{ctx.author.id}'))
    data_base.commit()

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if lang_id == 0:
        await ctx.send(f'{ctx.author.mention} *Updated hooby in your biography!* ‚Äπ‚úÖ‚Ä∫')
    elif lang_id == 100:
        await ctx.send(f'{ctx.author.mention} *–û–±–Ω–æ–≤–ª–µ–Ω–∞ –≥—Ä–∞—Ñ–∞ —Ö–æ–æ–±–∏ –≤ –≤–∞—à–µ–π –±–∏–æ–≥—Ä–∞—Ñ–∏–∏!* ‚Äπ‚úÖ‚Ä∫')
    elif lang_id == 200:
        await ctx.send(f'{ctx.author.mention} *Actualizado el Conde de Hobie en su biograf√≠a!* ‚Äπ‚úÖ‚Ä∫')




@selentie.command()
async def write_about(ctx, *, user_about):
    server_name = ctx.message.guild.name

    curs.execute('UPDATE bio SET about == ? WHERE userid == ?', (f'{user_about}', f'{ctx.author.id}'))
    data_base.commit()

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if lang_id == 0:
        await ctx.send(f'{ctx.author.mention} *Updated about me in your biography!* ‚Äπ‚úÖ‚Ä∫')
    elif lang_id == 100:
        await ctx.send(f'{ctx.author.mention} *–û–±–Ω–æ–≤–ª–µ–Ω–∞ –≥—Ä–∞—Ñ–∞ –æ–±–æ –º–Ω–µ –≤ –≤–∞—à–µ–π –±–∏–æ–≥—Ä–∞—Ñ–∏–∏!* ‚Äπ‚úÖ‚Ä∫')
    elif lang_id == 200:
        await ctx.send(f'{ctx.author.mention} *Gr√°fico actualizado sobre m√≠ en su biograf√≠a!* ‚Äπ‚úÖ‚Ä∫')





@selentie.command(aliases = ['user', '—é–∑–µ—Ä', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 'view'])
async def view_person(ctx, username: discord.Member):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    user_level = curs.execute('SELECT lvl FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{username.id}')).fetchone()

    user_messages = curs.execute('SELECT msgs FROM level WHERE servername == ? AND userid == ?', (f'{server_name}', f'{username.id}')).fetchone()

    warns = curs.execute('SELECT warns FROM warnings WHERE user == ? AND servername == ?', (f'{username}', f'{server_name}')).fetchone()
    
    hooby = curs.execute('SELECT hooby FROM bio WHERE userid == ?', (f'{username.id}',)).fetchone()

    about = curs.execute('SELECT about FROM bio WHERE userid == ?', (f'{username.id}',)).fetchone()

    total_warns = 0
    if warns == None:
        total_warns = 0
    else:
        total_warns = warns[0]


    if lang_id == 0:
        emb = discord.Embed(title='User Profile: ' + str(username), colour=discord.Color.green())

        emb.set_thumbnail(url=username.avatar_url)

        emb.add_field(name= '‚Äπüî∂‚Ä∫ ID:', value= '```' + str(ctx.author.id) + '```') 
        emb.add_field(name= '‚Äπ‚ú®‚Ä∫ Lvl:', value= '```' + str(user_level[0]) + '```')
        emb.add_field(name= '‚Äπüì®‚Ä∫ Messages:', value= '```' + user_messages[0] + '```')
        emb.add_field(name= '‚Äπ‚ùó‚Ä∫ Warnings:', value= '```' + str(total_warns) + '```')
        emb.add_field(name= '‚Äπüé®‚Ä∫ Hooby:', value= '```' + hooby[0] + '```')
        emb.add_field(name= '‚Äπüé©‚Ä∫ About:', value= '```' + about[0] + '```')
        
        await ctx.send(embed = emb)
    if lang_id == 100:
        emb = discord.Embed(title='–ü—Ä–æ—Ñ–∏–ª—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ' + str(username), colour=discord.Color.green())

        emb.set_thumbnail(url=username.avatar_url)

        emb.add_field(name= '‚Äπüî∂‚Ä∫ –ê–π–¥–∏:', value= '```' + str(ctx.author.id) + '```') 
        emb.add_field(name= '‚Äπ‚ú®‚Ä∫ –£—Ä–æ–≤–µ–Ω—å:', value= '```' + str(user_level[0]) + '```')
        emb.add_field(name= '‚Äπüì®‚Ä∫ –°–æ–æ–±—â–µ–Ω–∏—è:', value= '```' + user_messages[0] + '```')
        emb.add_field(name= '‚Äπ‚ùó‚Ä∫ –í–∞—Ä–Ω—ã:', value= '```' + str(total_warns) + '```')
        emb.add_field(name= '‚Äπüé®‚Ä∫ –•–æ–æ–±–∏:', value= '```' + hooby[0] + '```')
        emb.add_field(name= '‚Äπüé©‚Ä∫ –û–±–æ –º–Ω–µ:', value= '```' + about[0] + '```')
        
        await ctx.send(embed = emb)
    if lang_id == 200:
        emb = discord.Embed(title='Perfil: ' + str(ctx.author.name), colour=discord.Color.green())

        emb.set_thumbnail(url=ctx.author.avatar_url)

        emb.add_field(name= '‚Äπüî∂‚Ä∫ Aidi:', value= '```' + str(ctx.author.id) + '```') 
        emb.add_field(name= '‚Äπ‚ú®‚Ä∫ nivel:', value= '```' + str(user_level[0]) + '```')
        emb.add_field(name= '‚Äπüì®‚Ä∫ mensajes:', value= '```' + user_messages[0] + '```')
        emb.add_field(name= '‚Äπ‚ùó‚Ä∫ Advertencia:', value= '```' + str(total_warns) + '```')
        emb.add_field(name= '‚Äπüé®‚Ä∫ Hooby:', value= '```' + hooby[0] + '```')
        emb.add_field(name= '‚Äπüé©‚Ä∫ Sobre:', value= '```' + about[0] + '```')
        
        await ctx.send(embed = emb)




@selentie.command()
async def bio_commands(ctx):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if lang_id == 0:
        emb = discord.Embed(title='‚ÄπüëÄ‚Ä∫ Bio Commands:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '{}write_hooby <text>'.format(PREFIX), value='```writes hooby into your biography.```')
        emb.add_field(name= '{}write_about <text>'.format(PREFIX), value='```writes about into your biography.```')
        emb.add_field(name= '{}me'.format(PREFIX), value='```check your biography.```')
        emb.add_field(name= '{}user <user_mention>'.format(PREFIX), value='```checks user biography.```')
        
        await ctx.send(embed = emb)
    elif lang_id == 100:
        emb = discord.Embed(title='‚ÄπüëÄ‚Ä∫ –ö–æ–º–º–∞–Ω–¥—ã –ë–∏–æ–≥—Ä–∞—Ñ–∏–∏:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '{}write_hooby <text>'.format(PREFIX), value='```–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ö–æ–æ–±–∏ –≤ –≤–∞—à—É –±–∏–æ–≥—Ä–∞—Ñ–∏—é.```')
        emb.add_field(name= '{}write_about <text>'.format(PREFIX), value='```–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –≥—Ä–∞—Ñ—É –æ–±–æ –º–Ω–µ –≤ –≤–∞—à–µ–π –±–∏–æ–≥—Ä–∞—Ñ–∏–∏.```')
        emb.add_field(name= '{}me'.format(PREFIX), value='```–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à—É –±–∏–æ–≥—Ä–∞—Ñ–∏—é.```')
        emb.add_field(name= '{}user <user_mention>'.format(PREFIX), value='```–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∏–æ–≥—Ä–∞—Ñ–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.```')
        
        await ctx.send(embed = emb)
    elif lang_id == 200:
        emb = discord.Embed(title='‚ÄπüëÄ‚Ä∫ Comandos Biograf√≠as:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '{}write_hooby <text>'.format(PREFIX), value='```escribe Hobie en tu biograf√≠a.```')
        emb.add_field(name= '{}write_about <text>'.format(PREFIX), value='```escribe la informaci√≥n en una columna sobre m√≠ en su biograf√≠a.```')
        emb.add_field(name= '{}me'.format(PREFIX), value='```muestra tu biograf√≠a.```')
        emb.add_field(name= '{}user <user_mention>'.format(PREFIX), value='```muestra la biograf√≠a del usuario.```')

        await ctx.send(embed = emb)




@selentie.command()
async def binary_encode(ctx, *, text):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    response = requests.get('https://some-random-api.ml/binary', data={ 'encode': text })

    binary = response.json()['binary']

    if lang_id == 0:
        emb = discord.Embed(title='‚Äπüíª‚Ä∫ Binary Encoder', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚ÄπüìÉ‚Ä∫ Encoded:', value= '```' + binary + '```')

        await ctx.send(ctx.author.mention, embed = emb)
    elif lang_id == 100:
        emb = discord.Embed(title='‚Äπüíª‚Ä∫ –ë–∏–Ω–∞—Ä–Ω—ã–π –®–∏—Ñ—Ä–æ–≤—â–∏–∫', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚ÄπüìÉ‚Ä∫ –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ:', value= '```' + binary + '```')

        await ctx.send(ctx.author.mention, embed = emb)
    elif lang_id == 200:
        emb = discord.Embed(title='‚Äπüíª‚Ä∫ Cript√≥grafo binario', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚ÄπüìÉ‚Ä∫ De clave:', value= '```' + binary + '```')

        await ctx.send(ctx.author.mention, embed = emb)




@selentie.command()
async def binary_decode(ctx, *, binary_encoded):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    response = requests.get('https://some-random-api.ml/binary', data={ 'decode': binary_encoded })

    decoded = response.json()['text']

    if lang_id == 0:
        emb = discord.Embed(title='‚Äπüíª‚Ä∫ Binary Decoder', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚ÄπüìÉ‚Ä∫ Decoded:', value= '```' + decoded + '```')

        await ctx.send(ctx.author.mention, embed = emb)
    elif lang_id == 100:
        emb = discord.Embed(title='‚Äπüíª‚Ä∫ –ë–∏–Ω–∞—Ä–Ω—ã–π –î–µ—à–∏—Ñ—Ä–æ–≤—â–∏–∫', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚ÄπüìÉ‚Ä∫ –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ:', value= '```' + decoded + '```')

        await ctx.send(ctx.author.mention, embed = emb)
    elif lang_id == 200:
        emb = discord.Embed(title='‚Äπüíª‚Ä∫ Descifrador Binario', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚ÄπüìÉ‚Ä∫ Descifro:', value= '```' + decoded + '```')

        await ctx.send(ctx.author.mention, embed = emb)




@selentie.command()
async def minecraft(ctx, *, nickname):
    server_name = ctx.message.guild.name
    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    response = requests.get('https://some-random-api.ml/mc', data={ 'username': nickname })

    if response.status_code == 200:
        player_name = response.json()['username']
        uuid = response.json()['uuid']
        player_skin_thumbnail_url = 'https://crafatar.com/renders/body/' + str(uuid) + '?overlay=true'

        if lang_id == 0:
            emb = discord.Embed(title='Minecraft: ' + str(nickname), colour=discord.Color.green())

            emb.set_thumbnail(url= player_skin_thumbnail_url)

            emb.add_field(name= '‚Äπüé≠‚Ä∫ Username:', value= '```' + player_name + '```')
            emb.add_field(name= '‚ÄπüéÆ‚Ä∫ UUID:', value= '```' + uuid + '```')

            await ctx.send(embed = emb)
        elif lang_id == 100:
            emb = discord.Embed(title='–ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç: ' + str(nickname), colour=discord.Color.green())

            emb.set_thumbnail(url= player_skin_thumbnail_url)

            emb.add_field(name= '‚Äπüé≠‚Ä∫ –ò–º—è –ò–≥—Ä–æ–∫–∞:', value= '```' + player_name + '```')
            emb.add_field(name= '‚ÄπüéÆ‚Ä∫ UUID:', value= '```' + uuid + '```')

            await ctx.send(embed = emb)
        elif lang_id == 200:
            emb = discord.Embed(title='Minecraft: ' + str(nickname), colour=discord.Color.green())

            emb.set_thumbnail(url= player_skin_thumbnail_url)

            emb.add_field(name= '‚Äπüé≠‚Ä∫ Nombre Del Jugador:', value= '```' + player_name + '```')
            emb.add_field(name= '‚ÄπüéÆ‚Ä∫ UUID:', value= '```' + uuid + '```')

            await ctx.send(embed = emb)

    else:
        if lang_id == 0:
            await ctx.send(f'{ctx.author.mention} ‚Äπ‚ùå‚Ä∫ *Request didnt got respond.* ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{ctx.author.mention} ‚Äπ‚ùå‚Ä∫ *–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.* ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{ctx.author.mention} ‚Äπ‚ùå‚Ä∫ *No se pudo ejecutar la consulta.* ‚Äπ‚ùå‚Ä∫')
        


@selentie.command()
@commands.has_permissions(administrator = True)
async def dm(ctx, user_id, *, message):
    await ctx.channel.purge(limit = 1)

    user = await selentie.fetch_user(user_id)

    await user.send(f'{message}')




@selentie.command()
@commands.has_permissions(administrator = True)
async def chatfilter(ctx, chat_filter):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])


    if chat_filter == 'Enable':
        curs.execute('UPDATE chatfilter SET working == ? WHERE servername == ?', (True, f'{server_name}'))
        data_base.commit()

        if lang_id == 0:
            await ctx.send(f'{ctx.author.mention} *chat filter enabled!* ‚Äπ‚úÖ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{ctx.author.mention} *—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —á–∞—Ç–∞ –±—ã–ª–∞ –≤–∫–ª—é—á–µ–Ω–∞! ‚Äπ‚úÖ‚Ä∫*')
        elif lang_id == 200:
            await ctx.send(f'{ctx.author.mention} *el filtrado de chat se ha habilitado!* ‚Äπ‚úÖ‚Ä∫')
    elif chat_filter == 'Disable':
        curs.execute('UPDATE chatfilter SET working == ? WHERE servername == ?', (False, f'{server_name}'))
        data_base.commit()

        if lang_id == 0:
            await ctx.send(f'{ctx.author.mention} *chat filter disabled!* ‚Äπ‚ùé‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{ctx.author.mention} *—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —á–∞—Ç–∞ –±—ã–ª–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞!* ‚Äπ‚ùé‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{ctx.author.mention} *el filtrado de chat se ha desactivado!* ‚Äπ‚ùé‚Ä∫')
    else:
        if lang_id == 0:
            await ctx.send(f'{ctx.author.mention} ‚Äπ‚ùå‚Ä∫ *incorrect argument!* ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{ctx.author.mention} ‚Äπ‚ùå‚Ä∫ *–Ω–µ –≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã!* ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{ctx.author.mention} ‚Äπ‚ùå‚Ä∫ *¬°no es un par√°metro de comando correcto!* ‚Äπ‚ùå‚Ä∫')




@selentie.command(aliases = ['—Å–µ—Ä–≤–µ—Ä–∞', '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–µ—Ä–≤–µ—Ä–æ–≤'])
async def servers(ctx):
    servers = len(selentie.guilds)
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if lang_id == 0:
        emb = discord.Embed(title='‚Äπüì±‚Ä∫ Servers Cout:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚Äπüîé‚Ä∫ Checking:', value= '```' + str(servers) + '```')

        await ctx.send(embed = emb)
    elif lang_id == 100:
        emb = discord.Embed(title='‚Äπüì±‚Ä∫ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –°–µ—Ä–≤–µ—Ä–æ–≤:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚Äπüîé‚Ä∫ Selentie –°–º–æ—Ç—Ä–∏—Ç:', value= '```' + str(servers) + '```')

        await ctx.send(embed = emb)
    elif lang_id == 200:
        emb = discord.Embed(title='‚Äπüì±‚Ä∫ N√∫mero De Servidores:', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚Äπüîé‚Ä∫ Selentie Mirando:', value= '```' + str(servers) + '```')

        await ctx.send(embed = emb)




@selentie.command(aliases = ['–∫–∞–Ω–∞–ª_—Ä–µ–ø–æ—Ä—Ç–æ–≤', '–∫–∞–Ω–∞–ª_–∂–∞–ª–æ–±', 'report_channel'])
@commands.has_permissions(administrator = True)
async def set_report_channel(ctx, channel_id):
    server_name = ctx.message.guild.name

    await ctx.channel.purge(limit = 1)

    channel = selentie.get_channel(channel_id)

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    curs.execute('UPDATE reports SET channel_id == ? WHERE servername == ?', (f'{channel_id}', f'{server_name}'))
    data_base.commit()

    if lang_id == 0:
        emb = discord.Embed(title='‚Äπüìí‚Ä∫ Report Channel', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚Äπüìé‚Ä∫ Channel ID:', value= '```' + str(channel_id) + '```')

        await ctx.send(embed = emb)
    elif lang_id == 100:
        emb = discord.Embed(title='‚Äπüìí‚Ä∫ –ö–∞–Ω–∞–ª –ñ–∞–ª–æ–±', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚Äπüìé‚Ä∫ –ê–π–¥–∏ –∫–∞–Ω–∞–ª–∞:', value= '```' + str(channel_id) + '```')

        await ctx.send(embed = emb)
    elif lang_id == 200:
        emb = discord.Embed(title='‚Äπüìí‚Ä∫ Canal De Quejas', colour=discord.Color.green())

        emb.set_thumbnail(url="https://media.discordapp.net/attachments/994739888723349587/994952048216915978/selentie.png?width=473&height=473")

        emb.add_field(name= '‚Äπüìé‚Ä∫ Aidi canal:', value= '```' + str(channel_id) + '```')

        await ctx.send(embed = emb)




@selentie.command(aliases = ['—Ä–µ–ø–æ—Ä—Ç', '–∂–∞–ª–æ–±–∞'])
async def report(ctx, username: discord.Member, *, report_reason):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    reports_channel_id = curs.execute('SELECT channel_id FROM reports WHERE servername == ?', (f'{server_name}',)).fetchone()

    if int(reports_channel_id[0]) == 0:
        if lang_id == 0:
            await ctx.send(f'{ctx.author.mention} *Sorry, but report channel didnt exists in current server.*')
        elif lang_id == 100:
            await ctx.send(f'{ctx.author.mention} *–ò–∑–≤–∏–Ω–∏, –Ω–æ —Ä–µ–ø–æ—Ä—Ç –∫–∞–Ω–∞–ª –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.*')
        elif lang_id == 200:
            await ctx.send(f'{ctx.author.mention} *Lo siento, pero el canal de informes no est√° instalado en este servidor.*')
    else:
        channel = selentie.get_channel(int(reports_channel_id[0]))

        if lang_id == 0:
            emb = discord.Embed(title='‚Äπüì¢‚Ä∫ Report From: ' + str(ctx.author), colour=discord.Color.green())

            emb.set_thumbnail(url=username.avatar_url)

            emb.add_field(name= '‚Äπüìå‚Ä∫ Reported User: ' + str(username) , value= 'Reason: ' + '```' + str(report_reason) + '```')

            await channel.send(embed = emb)
        elif lang_id == 100:
            emb = discord.Embed(title='‚Äπüì¢‚Ä∫ –ñ–∞–ª–æ–±–∞ –û—Ç: ' + str(ctx.author), colour=discord.Color.green())

            emb.set_thumbnail(url=username.avatar_url)

            emb.add_field(name= '‚Äπüìå‚Ä∫ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –∂–∞–ª–æ–±–∞: ' + str(username) , value= '–ü—Ä–∏—á–∏–Ω–∞: ' + '```' + str(report_reason) + '```')

            await channel.send(embed = emb)
        elif lang_id == 200:
            emb = discord.Embed(title='‚Äπüì¢‚Ä∫ Denuncia De: ' + str(ctx.author), colour=discord.Color.green())

            emb.set_thumbnail(url=username.avatar_url)

            emb.add_field(name= '‚Äπüìå‚Ä∫ Usuario contra quien denuncia: ' + str(username) , value= 'Raz√≥n: ' + '```' + str(report_reason) + '```')

            await channel.send(embed = emb)




@selentie.command()
async def verify(ctx):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])


    user_role_id = curs.execute('SELECT user_role_id FROM user_role WHERE servername == ?', (f'{server_name}',)).fetchone()

    if int(user_role_id[0]) == 0:
        if lang_id == 0:
            await ctx.send(f'{ctx.author.mention} *User role not exists on*: ' + str(server_name))
        elif lang_id == 100:
            await ctx.send(f'{ctx.author.mention} *–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ*: ' + str(server_name))
        elif lang_id == 200:
            await ctx.send(f'{ctx.author.mention} *El rol de usuario no est√° expuesto en el servidor*: ' + str(server_name))


    msg = 0

    if lang_id == 0:
        msg = await ctx.channel.send(f'{ctx.author.mention} *React this message to get verified*.')
        await msg.add_reaction('‚úÖ')
    elif lang_id == 100:
        msg = await ctx.channel.send(f'{ctx.author.mention} *–î–æ–±–∞–≤—å —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ–±—ã –±—ã—Ç—å –≤–µ—Ä–µ—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã–º*.')
        await msg.add_reaction('‚úÖ')
    elif lang_id == 200:
        msg = await ctx.channel.send(f'{ctx.author.mention} *Agregue una reacci√≥n a este mensaje para ser verificado*.')
        await msg.add_reaction('‚úÖ')

    user_role = discord.utils.get(ctx.message.guild.roles, id=int(user_role_id[0]))


    def check(reaction, user):
        return user == ctx.author and reaction.message == msg
    # Waiting for the reaction
    reaction, user = await selentie.wait_for("reaction_add", check=check)
    await ctx.channel.purge(limit = 2)
    await ctx.author.add_roles( user_role )




@selentie.command(aliases = ['–ø–æ—Å—Ç–∞–≤–∏—Ç—å_—Ä–æ–ª—å_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '–ø–æ—Å—Ç–∞–≤–∏—Ç—å_—Ä–æ–ª—å_—é–∑–µ—Ä–∞'])
@commands.has_permissions(administrator = True)
async def set_user_role(ctx, role_id):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    curs.execute('UPDATE user_role SET user_role_id == ? WHERE servername == ?', ( f'{role_id}', f'{server_name}',))
    data_base.commit()

    server_icon = ctx.guild.icon_url

    if lang_id == 0:
        emb = discord.Embed(title='‚Äπüåê‚Ä∫ Server: ' + str(server_name), colour=discord.Color.green())

        emb.set_thumbnail(url=server_icon)

        emb.add_field(name= '‚Äπüìå‚Ä∫ Got user role:', value= '```' + str(role_id) + '```')

        await ctx.send(embed = emb)
    elif lang_id == 100:
        emb = discord.Embed(title='‚Äπüåê‚Ä∫ –°–µ—Ä–≤–µ—Ä: ' + str(server_name), colour=discord.Color.green())

        emb.set_thumbnail(url=server_icon)

        emb.add_field(name= '‚Äπüìå‚Ä∫ –ü–æ–ª—É—á–µ–Ω–∞ –†–æ–ª—å:', value= '```' + str(role_id) + '```')

        await ctx.send(embed = emb)
    elif lang_id == 200:
        emb = discord.Embed(title='‚Äπüåê‚Ä∫ Servidor: ' + str(server_name), colour=discord.Color.green())

        emb.set_thumbnail(url=server_icon)

        emb.add_field(name= '‚Äπüìå‚Ä∫ Rol Obtenido:', value= '```' + str(role_id) + '```')

        await ctx.send(embed = emb)




@selentie.command(aliases = ['—Ç–∏–∫–µ—Ç', '–ø–æ–º–æ—â—å'])
async def ticket(ctx):
    server_name = ctx.message.guild.name

    commands_called = curs.execute('SELECT commandcout FROM commands WHERE servername == ?', (f'{ctx.message.guild.name}',)).fetchone()
    total_commands = int(commands_called[0])
    total_commands += 1
    curs.execute('UPDATE commands SET commandcout == ? WHERE servername == ?', (f'{total_commands}', f'{ctx.message.guild.name}'))
    data_base.commit()

    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    msg = 0

    if lang_id == 0:
        msg = await ctx.channel.send(f'{ctx.author.mention} *React üì® to create ticket*.')
        await msg.add_reaction('üì®')
    elif lang_id == 100:
        msg = await ctx.channel.send(f'{ctx.author.mention} *–ù–∞–∂–º–∏ —Ä–µ–∞–∫—Ü–∏—é üì® —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç*.')
        await msg.add_reaction('üì®')
    elif lang_id == 200:
        msg = await ctx.channel.send(f'{ctx.author.mention} *Presiona la reacci√≥n üì® para crear un ticket*.')
        await msg.add_reaction('üì®')

    def check(reaction, user):
        return user == ctx.author and reaction.message == msg
    # Waiting for the reaction
    reaction, user = await selentie.wait_for("reaction_add", check=check)
    await msg.delete()

    ticket_status = curs.execute('SELECT status FROM tickets WHERE servername == ? AND userid == ?', (f'{server_name}', f'{ctx.author.id}')).fetchone()

    if ticket_status == None:
        curs.execute('INSERT INTO tickets VALUES(?, ?, ?)', (f'{server_name}', f'{ctx.author.id}', f'0'))
        data_base.commit()
    else:
        pass

    total_ticket_status = curs.execute('SELECT status FROM tickets WHERE servername == ? AND userid == ?', (f'{server_name}', f'{ctx.author.id}')).fetchone()

    if int(total_ticket_status[0]) == 1:
        if lang_id == 0:
           await ctx.send(f'{ctx.author.mention} ‚Äπüí¢‚Ä∫  *You already have not closed ticket!*. ‚Äπüí¢‚Ä∫ ')
        elif lang_id == 100:
            await ctx.send(f'{ctx.author.mention} ‚Äπüí¢‚Ä∫  *–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –Ω–µ –∑–∞–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç!*. ‚Äπüí¢‚Ä∫ ')
        elif lang_id == 200:
            await ctx.send(f'{ctx.author.mention} ‚Äπüí¢‚Ä∫  *¬°Ya tienes un ticket no cerrado!*. ‚Äπüí¢‚Ä∫ ')
    elif int(total_ticket_status[0]) == 0:
        ticket_channel = await ctx.message.guild.create_text_channel(name=f'ticket - {ctx.author}')
        curs.execute('UPDATE tickets SET status == ? WHERE servername == ? AND userid == ?', (f'1', f'{server_name}', f'{ctx.author.id}'))
        data_base.commit()

        close_ticket = 0

        if lang_id == 0:
            close_ticket = await ticket_channel.send(f'{ctx.author.mention} *React ‚ùå to close ticket*.')
            await close_ticket.add_reaction('‚ùå')

            def check(reaction, user):
                return user == ctx.author and reaction.message == close_ticket
            # Waiting for the reaction
            reaction, user = await selentie.wait_for("reaction_add", check=check)
            await ticket_channel.delete()
            curs.execute('UPDATE tickets SET status == ? WHERE servername == ? AND userid == ?', (f'0', f'{server_name}', f'{ctx.author.id}'))
            data_base.commit()
        if lang_id == 100:
            close_ticket = await ticket_channel.send(f'{ctx.author.mention} *–ù–∞–∂–º–∏ ‚ùå —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç*.')
            await close_ticket.add_reaction('‚ùå')

            def check(reaction, user):
                return user == ctx.author and reaction.message == close_ticket
            # Waiting for the reaction
            reaction, user = await selentie.wait_for("reaction_add", check=check)
            await ticket_channel.delete()
            curs.execute('UPDATE tickets SET status == ? WHERE servername == ? AND userid == ?', (f'0', f'{server_name}', f'{ctx.author.id}'))
            data_base.commit()
        if lang_id == 200:
            close_ticket = await ticket_channel.send(f'{ctx.author.mention} *Pulsa ‚ùå para cerrar el ticket*.')
            await close_ticket.add_reaction('‚ùå')

            def check(reaction, user):
                return user == ctx.author and reaction.message == close_ticket
            # Waiting for the reaction
            reaction, user = await selentie.wait_for("reaction_add", check=check)
            await ticket_channel.delete()
            curs.execute('UPDATE tickets SET status == ? WHERE servername == ? AND userid == ?', (f'0', f'{server_name}', f'{ctx.author.id}'))
            data_base.commit()





@clear.error
async def clear_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")




@kick.error
async def kick_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")




@set_localization.error
async def set_localization_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")



@decode.error
async def decode_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")



@warn.error
async def warn_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")




@clearwarns.error
async def clearwarns_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")



@ban.error
async def ban_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")



@translate.error
async def translate_erro(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")



@ipinfo.error
async def ipinfo_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")




@write_hooby.error
async def write_hooby_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")


        

@write_about.error
async def write_about_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")




@minecraft.error
async def minecraft_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")





@binary_encode.error
async def binary_encode_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")





@binary_decode.error
async def binary_decode_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")




@report.error
async def report_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")




@set_report_channel.error
async def set_report_channel_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")




@chatfilter.error
async def chatfilter_error(ctx, error):
    author = ctx.author
    server_name = ctx.message.guild.name
    localization_id = curs.execute('SELECT languageid FROM localization WHERE servername == ?', (f'{server_name}',)).fetchone()
    lang_id = int(localization_id[0])

    if isinstance(error, commands.MissingRequiredArgument):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *seems like, you missed argument*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–º–º–∞–Ω–¥—ã*. ‚Äπ‚ùå‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f'{author.mention} ‚Äπ‚ùå‚Ä∫ *parece que no ha ingresado el par√°metro de comando*. ‚Äπ‚ùå‚Ä∫')
    elif isinstance(error, commands.MissingPermissions):
        if lang_id == 0:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *seems like you dont have permissions to use that*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 100:
            await ctx.send(f'{author.mention} ‚ÄπüåÄ‚Ä∫ *–ø–æ—Ö–æ–∂–µ —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã*. ‚ÄπüåÄ‚Ä∫')
        elif lang_id == 200:
            await ctx.send(f"{author.mention} ‚ÄπüåÄ‚Ä∫ *parece que no tienes permiso para usar este comando*. ‚ÄπüåÄ‚Ä∫")




selentie_token = "YOUR BOT TOKEN HERE"
selentie.run( selentie_token )